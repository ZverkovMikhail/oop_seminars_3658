/**
 * <h3>Task 1</h3>
 * Реализовать, с учетом ооп подхода, приложение Для проведения исследований с генеалогическим древом.
 * Идея: описать некоторое количество компонент, например: модель человека компонента хранения связей и
 * отношений между людьми: родитель, ребёнок - классика, но можно подумать и про отношение, брат, свекровь,
 * сестра и т. д. компонент для проведения исследований дополнительные компоненты, например отвечающие за
 * вывод данных в консоль, загрузку и сохранения в файл, получение\построение отдельных моделей человека
 * Под “проведением исследования” можно понимать получение всех детей выбранного человека.<br><br>
 * <h3>Task 2</h3>
 * Описать с ООП стиле, логику взаимодействия объектов реального мира между собой: шкаф-человек.
 * Какие члены должны быть у каждого из классов (у меня на семинаре студенты пришли к тому, чтобы продумать
 * логику взаимодействия жена разрешает открыть дверцу шкафа мужу, после чего эту дверцу можно открыть)
 */
import Task1.Task1;
import Task2.Task2;

public class Main {
    public static void main(String[] args) {
//        Task1.run();
        Task2.run();
    }
}